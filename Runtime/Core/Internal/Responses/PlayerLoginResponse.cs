// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Xternity.REST.Responses;
//
//    var playerLoginResponse = PlayerLoginResponse.FromJson(jsonString);

namespace Xternity.REST.Responses
{
    using System;
    using System.Net;
    using Newtonsoft.Json;

    public partial record PlayerLoginResponse : IRESTResponse<PlayerLoginResponse>
    {
        // [JsonProperty("status", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]
        public static PlayerInfoResponse FromJson(string json) => JsonFacade.FromJson<PlayerInfoResponse>(json);
        public string ToJson() => JsonConvert.SerializeObject(this, Converter.Settings);

        [JsonProperty("status"), JsonRequired]
        public string Status { get; set; }

        [JsonProperty("data")]
        public PlayerLoginResponse_Data Data { get; set; }

        [JsonProperty("meta")]
        public PlayerLoginResponse_Meta Meta { get; set; }

        [JsonProperty("error")]
        public string Error { get; set; }

        public partial record PlayerLoginResponse_Data
        {
            [JsonProperty("tokens")]
            public PlayerLoginResponse_Tokens Tokens { get; set; }
        }

        public partial record PlayerLoginResponse_Tokens
        {
            [JsonProperty("access")]
            public PlayerLoginResponse_Access Access { get; set; }
        }

        public partial record PlayerLoginResponse_Access
        {
            [JsonProperty("token")]
            public string Token { get; set; }

            [JsonProperty("expires")]
            public DateTimeOffset Expires { get; set; }
        }

        public partial record PlayerLoginResponse_Meta
        {
        }

    }
}
